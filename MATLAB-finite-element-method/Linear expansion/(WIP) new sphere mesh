clear all
N_sph = 5;
R = 5;
H = 5+1.5;
HT=sqrt(3)/2*H;
rotate=true; 
for j=1:N_sph
    t1a=pi/2*R/2*(j-1)/N_sph;
    t2a=-pi/3*R/2*sin(2*t1a/R);
    t1b=pi/2*R/2*(j)/N_sph;
    t2b=-pi/3*R/2*sin(2*t1b/R);
    row=[2 t2a t2b t1a t1b 1 0];
    A(j,:)=row;
    plot(t2a,t1a,'k*');
    hold on
    %plot(t2b,t1b,'k*');
end
for j=1:N_sph
    t1a=pi/2*R/2; t1b=t1a;
    t2a=-pi/3*R/2+2*pi/3*R/2*(j-1)/N_sph;
    t2b=-pi/3*R/2+2*pi/3*R/2*(j)/N_sph;
    row=[2 t2a t2b t1a t1b 1 0];
    A(j+N_sph,:)=row;
    plot(t2a,t1a,'r*'); 
    %plot(t2b,t1b,'k*'); 
end
for j=1:N_sph
    t1a=pi/2*R/2*(N_sph-j+1)/N_sph;
    t2a=pi/3*R/2*sin(2*t1a/R);
    t1b=pi/2*R/2*(N_sph-j)/N_sph;
    t2b=pi/3*R/2*sin(2*t1b/R);
    row=[2 t2a t2b t1a t1b 1 0];
    A(j+2*N_sph,:)=row;
    plot(t2a,t1a,'b*'); 
    %plot(t2b,t1b,'k*');
end
hold off
hmax = 2; % Maximum distance between points.
g_sph = transpose(A); % Geometry matrix
[p e t]=initmesh(g_sph,'hmax',hmax);
P_sph = p % Matrix containing positions of every corner plotted.
T_sph = t % Matrix identifying which corners form a triangle. 
h=pdemesh(p,e,t); % Plots the mesh
hold on
set(h,'linewidth',1,'color','k')
plot(P_sph(1,:),P_sph(2,:),'r*') % Plots the triangle corners in red
axis image
hold off



%ps=[];
ts=[];
n = 0;
for jflip=1:2
    for jphi=1:1
        phi=pi/2*(jphi-1);
        for j=1:length(p)
            xc=0; yc=0; zc=0;
            t2=p(1,j); t1=p(2,j);
            if jflip==1
                z=R/2*cos(2*t1/R);
                zc=H;
            else
                z=-R/2*cos(2*t1/R);
            end
            x=R/2*sin(2*t1/R)*cos(t2/(R/2*sin(2*t1/R))-pi/4-pi/2+phi);
            y=R/2*sin(2*t1/R)*sin(t2/(R/2*sin(2*t1/R))-pi/4-pi/2+phi);
            if t1==0
                x=0; y=0;
            end
            ps(1,j+n)=x;
            ps(2,j+n)=y;
            ps(3,j+n)=z;
        end
        % 1: Denotes that the element is a part of a spherical surface.
        % xc, yc, zc: center of sphere
        % The normal vectors is assumed to be in the direction from the
        % sphere center to the point on the surface and is obtained later
        % on
        td=zeros(7,length(t));
        td(1,:)=1; td(2,:)=xc; td(3,:)=yc; td(4,:)=zc; 
        td(5,:)=0; td(6,:)=0; td(7,:)=0;
        t2=[t(1,:)+n;t(2,:)+n;t(3,:)+n;td]; 
        ts=[ts t2];
        n=n+length(p);
    end
    if jflip == 1
        t_plot=ts;
        p_plot=ps;
    end 
end    

%figure('name','sphere mesh')
for k =1:length(t_plot(1,:))
   r1=p_plot(:,t_plot(1,k)); x1=r1(1); y1=r1(2); z1=r1(3);
   r2=p_plot(:,t_plot(2,k)); x2=r2(1); y2=r2(2); z2=r2(3);   
   r3=p_plot(:,t_plot(3,k)); x3=r3(1); y3=r3(2); z3=r3(3);
   xv=[x1 x2 x3 x1];
   yv=[y1 y2 y3 y1];
   zv=[z1 z2 z3 z1];
   h=fill3(xv,yv,zv,'w'); set(h,'linewidth',1)   
   if k==1, hold on; end
end
axis image
hold off
